<Window
    x:Class="CouchPotato.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:c="clr-namespace:CouchPotato.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:e="clr-namespace:CouchPotato.Extensions"
    xmlns:local="clr-namespace:CouchPotato"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:p="clr-namespace:CouchPotato.Properties"
    xmlns:v="clr-namespace:CouchPotato.Views"
    Title="Couch Potato"
    Width="{Binding MainWindowWidth,
                    Source={x:Static p:Settings.Default},
                    Mode=TwoWay}"
    Height="{Binding MainWindowHeight,
                     Source={x:Static p:Settings.Default},
                     Mode=TwoWay}"
    d:DataContext="{d:DesignInstance Type=local:MainWindowViewModel}"
    Background="{DynamicResource MaterialDesignPaper}"
    FontFamily="{DynamicResource MaterialDesignFont}"
    Left="{Binding MainWindowLeft,
                   Source={x:Static p:Settings.Default},
                   Mode=TwoWay}"
    TextElement.FontSize="13"
    TextElement.FontWeight="Regular"
    TextElement.Foreground="{DynamicResource MaterialDesignBody}"
    TextOptions.TextFormattingMode="Ideal"
    TextOptions.TextRenderingMode="Auto"
    Top="{Binding MainWindowTop,
                  Source={x:Static p:Settings.Default},
                  Mode=TwoWay}"
    WindowState="{Binding MainWindowState,
                          Source={x:Static p:Settings.Default},
                          Mode=TwoWay}"
    mc:Ignorable="d">
    <Window.DataContext>
        <local:MainWindowViewModel />
    </Window.DataContext>
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="48" UseAeroCaptionButtons="False" />
    </WindowChrome.WindowChrome>
    <b:Interaction.Triggers>
        <b:EventTrigger EventName="Loaded">
            <b:InvokeCommandAction Command="{Binding OnLoadedCommand}" />
        </b:EventTrigger>
    </b:Interaction.Triggers>
    <Border>
        <Border.Style>
            <Style TargetType="Border">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=WindowState}" Value="Maximized">
                        <Setter Property="Margin" Value="10" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Border.Style>
        <Grid e:Grid.Rows="auto, *">
            <Grid e:Grid.Cols="auto,auto,*,48,48,48">
                <ToggleButton
                    x:Name="mainmenu_toggle"
                    Grid.Column="0"
                    Width="48"
                    Height="48"
                    Padding="0"
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    Foreground="White"
                    IsEnabled="{Binding CurrentPage.HamburgerMenu,
                                        Converter={c:NotNullConverter}}"
                    IsTabStop="False"
                    WindowChrome.IsHitTestVisibleInChrome="True">
                    <ToggleButton.Style>
                        <Style BasedOn="{StaticResource MaterialDesignFlatButton}" TargetType="ToggleButton">
                            <Setter Property="Content" Value="{md:PackIcon Kind=HamburgerMenu, Size=24}" />
                            <Style.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Content" Value="{md:PackIcon Kind=DotsGrid}" />
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Content" Value="{md:PackIcon Kind=HamburgerMenuBack, Size=24}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>
                <TextBlock
                    Grid.Column="1"
                    Padding="5"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    FontWeight="Bold">
                    <Run Text="Couch" />
                    <LineBreak />
                    <Run Text="Potato" />
                </TextBlock>

                <ContentControl
                    Grid.Column="2"
                    Margin="5"
                    Content="{Binding CurrentPage.TitleBarRegion}"
                    WindowChrome.IsHitTestVisibleInChrome="True" />

                <!--#region System Buttons-->
                <Button
                    Grid.Column="3"
                    Padding="0"
                    VerticalAlignment="Top"
                    Click="MinimizeButton_Click"
                    Content="{md:PackIcon Kind=WindowMinimize}"
                    Foreground="White"
                    IsTabStop="False"
                    Style="{DynamicResource MaterialDesignFlatButton}"
                    WindowChrome.IsHitTestVisibleInChrome="True" />
                <Button
                    Grid.Column="4"
                    Padding="0"
                    VerticalAlignment="Top"
                    Click="RestoreButton_Click"
                    Foreground="White"
                    IsTabStop="False"
                    WindowChrome.IsHitTestVisibleInChrome="True">
                    <Button.Style>
                        <Style BasedOn="{StaticResource MaterialDesignFlatButton}" TargetType="Button">
                            <Setter Property="Content" Value="{md:PackIcon Kind=WindowMaximize}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=WindowState}" Value="Maximized">
                                    <Setter Property="Content" Value="{md:PackIcon Kind=WindowRestore}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button
                    Grid.Column="5"
                    Padding="0"
                    VerticalAlignment="Top"
                    Click="CloseButton_Click"
                    Content="{md:PackIcon Kind=WindowClose}"
                    Foreground="Red"
                    IsTabStop="False"
                    Style="{DynamicResource MaterialDesignFlatAccentButton}"
                    WindowChrome.IsHitTestVisibleInChrome="True" />
                <!--#endregion-->
            </Grid>

            <ItemsControl
                Grid.Row="1"
                Margin="5"
                ItemsSource="{Binding Pages}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Grid />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate DataType="{x:Type v:ContentViewModel}">
                        <Grid Name="grid" Background="Transparent">
                            <Grid.Effect>
                                <BlurEffect Radius="0" />
                            </Grid.Effect>
                            <Grid Background="Transparent">
                                <b:Interaction.Triggers>
                                    <b:EventTrigger EventName="MouseUp">
                                        <b:InvokeCommandAction Command="{Binding CancelCommand}" />
                                    </b:EventTrigger>
                                </b:Interaction.Triggers>
                            </Grid>
                            <ContentPresenter Content="{Binding}" />
                        </Grid>
                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding IsCurrent}" Value="False">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                                Storyboard.TargetName="grid"
                                                Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.Radius)"
                                                To="20" />
                                            <DoubleAnimation
                                                Storyboard.TargetName="grid"
                                                Storyboard.TargetProperty="(UIElement.Opacity)"
                                                To=".2" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                                Storyboard.TargetName="grid"
                                                Storyboard.TargetProperty="(UIElement.Effect).(BlurEffect.Radius)"
                                                To="0" />
                                            <DoubleAnimation
                                                Storyboard.TargetName="grid"
                                                Storyboard.TargetProperty="(UIElement.Opacity)"
                                                To="1" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>

            <md:DrawerHost
                Grid.Row="1"
                Grid.RowSpan="1"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                IsLeftDrawerOpen="{Binding ElementName=mainmenu_toggle,
                                           Path=IsChecked}"
                OpenMode="Modal">
                <md:DrawerHost.LeftDrawerContent>
                    <ContentControl Margin="5" Content="{Binding CurrentPage.HamburgerMenu}" />
                </md:DrawerHost.LeftDrawerContent>
            </md:DrawerHost>
        </Grid>
    </Border>
</Window>
