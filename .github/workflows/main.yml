name: Release

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      id: checkout
      uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '7.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Publish
      run: dotnet publish --configuration Release --no-build --output publish

    - name: Package with Squirrel
      run: |
        nuget install Squirrel.Windows -Version 2.0.1
        .\Squirrel.Windows.2.0.1\tools\Squirrel.exe --releasify publish\*.nupkg --outputDir ./Releases

    - name: Generate tag name
      id: generate_tag
      run: |
        echo "::set-output name=tag_name::release-$(git rev-parse --short ${{ github.sha }})"

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.generate_tag.outputs.tag_name }}
        release_name: Release ${{ steps.generate_tag.outputs.tag_name }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./Releases/RELEASES
        asset_name: RELEASES
        asset_content_type: application/octet-stream

    - name: Upload Setup.exe
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./